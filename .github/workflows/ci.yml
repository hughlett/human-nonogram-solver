name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - '**.lock'
      - '.nvmrc'
      - '.vscode/**'
      - '.prettierignore'
      - '.github/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - '**.lock'
      - '.nvmrc'
      - '.vscode/**'
      - '.prettierignore'
      - '.github/**'
  workflow_call:

jobs:
  format-lint:
    name: Check format and lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install project dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Check formatting
        run: yarn format:check

      - name: Run ESLint
        run: yarn lint:ci
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

      - name: Coveralls
        uses: coverallsapp/github-action@v1.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    needs: ci

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install project dependencies
        run: yarn install --frozen-lockfile --immutable

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test
